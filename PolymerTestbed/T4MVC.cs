// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
public static partial class MVC
{
    public static PolymerTestbed.Controllers.HomeController Home = new PolymerTestbed.Controllers.T4MVC_HomeController();
    public static PolymerTestbed.Controllers.WebComponentsController WebComponents = new PolymerTestbed.Controllers.T4MVC_WebComponentsController();
    public static T4MVC.SharedController Shared = new T4MVC.SharedController();
}

namespace T4MVC
{
}

namespace T4MVC
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public class Dummy
    {
        private Dummy() { }
        public static Dummy Instance = new Dummy();
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ViewResult : System.Web.Mvc.ViewResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ViewResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}
[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal partial class T4MVC_System_Web_Mvc_ActionResult : System.Web.Mvc.ActionResult, IT4MVCActionResult
{
    public T4MVC_System_Web_Mvc_ActionResult(string area, string controller, string action, string protocol = null): base()
    {
        this.InitMVCT4Result(area, controller, action, protocol);
    }
     
    public override void ExecuteResult(System.Web.Mvc.ControllerContext context) { }
    
    public string Controller { get; set; }
    public string Action { get; set; }
    public string Protocol { get; set; }
    public RouteValueDictionary RouteValueDictionary { get; set; }
}



namespace Links
{
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Scripts {
        private const string URLPATH = "~/Scripts";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class jquery {
            private const string URLPATH = "~/Scripts/jquery";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string jquery_2_1_4_min_js = Url("jquery-2.1.4.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class lodash {
            private const string URLPATH = "~/Scripts/lodash";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string lodash_min_js = Url("lodash.min.js");
        }
    
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class polymerTestbed {
            private const string URLPATH = "~/Scripts/polymerTestbed";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            public static readonly string _main_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/_main.min.js") ? Url("_main.min.js") : Url("_main.js");
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class webComponents {
                private const string URLPATH = "~/Scripts/polymerTestbed/webComponents";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string registration_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/registration.min.js") ? Url("registration.min.js") : Url("registration.js");
            }
        
        }
    
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static class Content {
        private const string URLPATH = "~/Content";
        public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
        public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public static class bower_components {
            private const string URLPATH = "~/Content/bower_components";
            public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
            public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class polymer {
                private const string URLPATH = "~/Content/bower_components/polymer";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bower_json = Url("bower.json");
                public static readonly string build_log = Url("build.log");
                public static readonly string LICENSE_txt = Url("LICENSE.txt");
                public static readonly string polymer_micro_html = Url("polymer-micro.html");
                public static readonly string polymer_mini_html = Url("polymer-mini.html");
                public static readonly string polymer_html = Url("polymer.html");
            }
        
            [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
            public static class webcomponentsjs {
                private const string URLPATH = "~/Content/bower_components/webcomponentsjs";
                public static string Url() { return T4MVCHelpers.ProcessVirtualPath(URLPATH); }
                public static string Url(string fileName) { return T4MVCHelpers.ProcessVirtualPath(URLPATH + "/" + fileName); }
                public static readonly string bower_json = Url("bower.json");
                public static readonly string build_log = Url("build.log");
                public static readonly string CustomElements_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/CustomElements.min.js") ? Url("CustomElements.min.js") : Url("CustomElements.js");
                public static readonly string CustomElements_min_js = Url("CustomElements.min.js");
                public static readonly string HTMLImports_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/HTMLImports.min.js") ? Url("HTMLImports.min.js") : Url("HTMLImports.js");
                public static readonly string HTMLImports_min_js = Url("HTMLImports.min.js");
                public static readonly string MutationObserver_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/MutationObserver.min.js") ? Url("MutationObserver.min.js") : Url("MutationObserver.js");
                public static readonly string MutationObserver_min_js = Url("MutationObserver.min.js");
                public static readonly string package_json = Url("package.json");
                public static readonly string README_md = Url("README.md");
                public static readonly string ShadowDOM_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/ShadowDOM.min.js") ? Url("ShadowDOM.min.js") : Url("ShadowDOM.js");
                public static readonly string ShadowDOM_min_js = Url("ShadowDOM.min.js");
                public static readonly string webcomponents_lite_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/webcomponents-lite.min.js") ? Url("webcomponents-lite.min.js") : Url("webcomponents-lite.js");
                public static readonly string webcomponents_lite_min_js = Url("webcomponents-lite.min.js");
                public static readonly string webcomponents_js = T4MVCHelpers.IsProduction() && T4Extensions.FileExists(URLPATH + "/webcomponents.min.js") ? Url("webcomponents.min.js") : Url("webcomponents.js");
                public static readonly string webcomponents_min_js = Url("webcomponents.min.js");
            }
        
        }
    
    }

    
    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public static partial class Bundles
    {
        public static partial class Scripts 
        {
            public static partial class jquery 
            {
                public static class Assets
                {
                    public const string jquery_2_1_4_min_js = "~/Scripts/jquery/jquery-2.1.4.min.js"; 
                }
            }
            public static partial class lodash 
            {
                public static class Assets
                {
                    public const string lodash_min_js = "~/Scripts/lodash/lodash.min.js"; 
                }
            }
            public static partial class polymerTestbed 
            {
                public static partial class webComponents 
                {
                    public static class Assets
                    {
                        public const string registration_js = "~/Scripts/polymerTestbed/webComponents/registration.js"; 
                    }
                }
                public static class Assets
                {
                    public const string _main_js = "~/Scripts/polymerTestbed/_main.js"; 
                }
            }
            public static class Assets
            {
            }
        }
        public static partial class Content 
        {
            public static partial class bower_components 
            {
                public static partial class polymer 
                {
                    public static class Assets
                    {
                    }
                }
                public static partial class webcomponentsjs 
                {
                    public static class Assets
                    {
                        public const string CustomElements_js = "~/Content/bower_components/webcomponentsjs/CustomElements.js"; 
                        public const string CustomElements_min_js = "~/Content/bower_components/webcomponentsjs/CustomElements.min.js"; 
                        public const string HTMLImports_js = "~/Content/bower_components/webcomponentsjs/HTMLImports.js"; 
                        public const string HTMLImports_min_js = "~/Content/bower_components/webcomponentsjs/HTMLImports.min.js"; 
                        public const string MutationObserver_js = "~/Content/bower_components/webcomponentsjs/MutationObserver.js"; 
                        public const string MutationObserver_min_js = "~/Content/bower_components/webcomponentsjs/MutationObserver.min.js"; 
                        public const string ShadowDOM_js = "~/Content/bower_components/webcomponentsjs/ShadowDOM.js"; 
                        public const string ShadowDOM_min_js = "~/Content/bower_components/webcomponentsjs/ShadowDOM.min.js"; 
                        public const string webcomponents_lite_js = "~/Content/bower_components/webcomponentsjs/webcomponents-lite.js"; 
                        public const string webcomponents_lite_min_js = "~/Content/bower_components/webcomponentsjs/webcomponents-lite.min.js"; 
                        public const string webcomponents_js = "~/Content/bower_components/webcomponentsjs/webcomponents.js"; 
                        public const string webcomponents_min_js = "~/Content/bower_components/webcomponentsjs/webcomponents.min.js"; 
                    }
                }
                public static class Assets
                {
                }
            }
            public static class Assets
            {
            }
        }
    }
}

[GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
internal static class T4MVCHelpers {
    // You can change the ProcessVirtualPath method to modify the path that gets returned to the client.
    // e.g. you can prepend a domain, or append a query string:
    //      return "http://localhost" + path + "?foo=bar";
    private static string ProcessVirtualPathDefault(string virtualPath) {
        // The path that comes in starts with ~/ and must first be made absolute
        string path = VirtualPathUtility.ToAbsolute(virtualPath);
        
        // Add your own modifications here before returning the path
        return path;
    }

    // Calling ProcessVirtualPath through delegate to allow it to be replaced for unit testing
    public static Func<string, string> ProcessVirtualPath = ProcessVirtualPathDefault;

    // Calling T4Extension.TimestampString through delegate to allow it to be replaced for unit testing and other purposes
    public static Func<string, string> TimestampString = System.Web.Mvc.T4Extensions.TimestampString;

    // Logic to determine if the app is running in production or dev environment
    public static bool IsProduction() { 
        return (HttpContext.Current != null && !HttpContext.Current.IsDebuggingEnabled); 
    }
}





#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114


